
rnode {

  server {
    # ID of the RChain network
    network-id = "testnet"

    # host name or IP address of this node
    # If this attribute is not set then the node will try to guess its IP address
    # host = 127.0.0.1

    # dynamic host IP address (changes periodically)
    host-dynamic = false

    # use UpNp to open ports on gateway router
    upnp = true

    # network port for node to node communication
    port = 40400

    # network port for HTTP services
    port-http = 40403

    # Kademlia port for node to node (P2P) communication
    port-kademlia = 40404

    # Use random ports in case RChain Protocol port and/or Kademlia port are not free
    use-random-ports = false

    # Default time out for sending messages
    send-timeout = 2 seconds

    # Start a stand-alone node (no bootstrapping)
    standalone = false

    # Bootstrap rnode address for initial seed
    bootstrap = "rnode://de6eed5d00cf080fc587eeb412cb31a75fd10358@52.119.8.109?protocol=40400&discovery=40404"

    # Path to data directory
    # data-dir = ${user.home}/.rnode

    # What are these *-size values? Why are they 10E12 ?!?
    # See map_size argument definition in
    # https://lmdb.readthedocs.io/en/release/#environment-class

    # Casper block store map size (in bytes)
    store-size = 10T

    # Casper block DAG storage map size (in bytes)
    dag-storage-size = 10T

    # Map size (in bytes)
    map-size = 10T

    # Number of connected peers picked randomly for broadcasting and streaming
    max-connections = 20

    # Allow connections to peers with private network addresses
    allow-private-addresses = false

    # Maximum size of messages that can be received via transport layer
    max-message-size = 256K

    # Maximum size of messages that can be received via transport layer streams
    max-stream-message-size = 200M

    # Chunk size for streaming packets between nodes
    packet-chunk-size = 256K

    # Number of incoming message consumers
    # Defaults to number of cores
    # message-consumers = 4

    fault-tolerance-threshold = 0.0

    synchrony-constraint-threshold = 0.3333333333333333

    round-robin-dispatcher {
      max-peer-queue-size = 100
      give-up-after-skipped = 10,
      drop-peer-after-retries = 3
    }

    # TLS certificate settings
    tls {
      # certificate = ${data-dir}"/node.certificate.pem"
      # key = ${data-dir}/node.key.pem
      secure-random-non-blocking = false
    }

    metrics {
      prometheus = false
      influxdb = false
      influxdb-udp = false
      zipkin = false
      sigar = false
    }

    reporting = false
  }

  # gRPC API settings
  grpc {
    # Hostname or IP of node on which gRPC service is running
    host = localhost

    # Port used for external gRPC API
    port-external = 40401

    # Port used for external gRPC API
    port-internal = 40402

    # Maximum size of message that can be sent via gRPC API
    max-message-size = 4M
  }

  # Casper configuration
  casper {
    # Base16 encoding of the public key to use for signing a proposed blocks
    # Can be inferred from the private key for some signature algorithms
    # validator-public-key =

    # Base16 encoding of the private key to use for signing a proposed blocks
    # validator-private-key =

    # Path to the base16 encoded private key to use for signing a proposed blocks
    # validator-private-key-path =

    # Plain text file consisting of lines of the form '<pk> <stake>',
    # which defines the bond amounts for each validator at genesis.
    # <pk> is the public key (in base-16 encoding) identifying the validator and <stake>
    # is the amount of Rev they have bonded (an integer).
    # Note: this overrides the 'num-validators' option.
    # bonds-file =

    # Plain text file listing the public keys of validators known to the user (one per line).
    # Signatures from these validators are required in order to accept a block which starts the local
    # node's view of the blockDAG.
    # known-validators-file =

    # Number of validators at genesis
    validators = 5

    # Plain text file consisting of lines of the form '<algorithm> <pk> <revBalance>',
    # which defines the Rev wallets that exist at genesis.
    # "<algorithm> is the algorithm used to verify signatures when using the wallet (one of ed25519 or secp256k1),
    # "<pk> is the public key (in base-16 encoding) identifying the wallet and <revBalance>
    # is the amount of Rev in the wallet.
    # wallets-file =

    # Minimum bond accepted by the PoS contract in the genesis block
    bond-minimum = 1

    # Maximum bond accepted by the PoS contract in the genesis block
    bond-maximum = 9223372036854775807

    # the length of the validation epoch in blocks by the PoS contract in the genesis block
    epoch-length = 10000

    # the length of the quarantine time in blocks by the PoS contract in the genesis block
    quarantine-length = 50000

    # the number of active validator in casper
    number-of-active-validators = 100

    # the interval of the casper loop to maintain requested blocks and missing dependent blocks
    # in the node runtime, there is a loop which would fetch dependency of the missing dag and maintain
    # requested blocks. See
    # https://github.com/rchain/rchain/blob/43a1dfd90ec16a4a5c3b24e7d7aab8bc160ccb2b/node/src/main/scala/coop/rchain/node/NodeRuntime.scala#L746-L759
    casper-loop-interval = 30

    # the timeout of the requested blocks
    # all requests sent to request blocks is put into a data structure for maintain
    requested-blocks-timeout = 240

    # Number of signatures from trusted validators required to creating an approved genesis block
    required-signatures = 0

    # Identifier of the shard this node is connected to
    shard = rchain

    # Start a node as a genesis validator
    genesis-validator = false

    # Interval at which condition for creating ApprovedBlock will be checked
    genesis-approve-interval = 5 seconds

    # Time window in which BlockApproval messages will be accumulated before checking conditions
    genesis-approve-duration = 5 minutes

    # Genesis data folder
    # genesis-path = ${data-dir}/genesis

    # Timestamp for the deploys
    # deploy-timestamp = 0
    
    # Finalization is called every 'n' blocks
    finalization-rate = 1
    
    # Maximum number of block parents
    max-number-of-parents = 2147483647 # Unlimited number of parents by default
  }

  influxdb {
    # Hostname and UDP port in which your InfluxDB is running
    hostname = "127.0.0.1"
    port = 8089

    # Max packet size for UDP metrics data sent to InfluxDB.
    max-packet-size = 1024 bytes

    # For histograms, which percentiles to count
    percentiles = [50.0, 70.0, 90.0, 95.0, 99.0, 99.9]

    # Allow including environment information as tags on all reported metrics.
    additional-tags {

      # Define whether specific environment settings will be included as tags in all exposed metrics. When enabled,
      # the service, host and instance tags will be added using the values from Kamon.environment().
      service = yes
      host = yes
      instance = yes

      # Specifies which Kamon environment tags should be ignored. All unmatched tags will be always added to al metrics.
      blacklisted-tags = []
    }
  }
}
