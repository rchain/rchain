contract @"makeWideSingle"(@n, ret) = {
  new loop in {
    contract loop(@k, @acc) = {
      if (k == 0) { ret!(acc) }
      else {
        new name in {
          loop!(k - 1, {acc | for(_ <- name) { Nil } | name!(Nil)})
        }
      }
    } |
    loop !(n, Nil)
  }
} |
contract @"makeWide"(@n, ret) = {
  new w1, w2, w3, w4, w5, w6, w7, w8, w9, w10 in {
    @"makeWideSingle"!(n, *w1) |
    @"makeWideSingle"!(n, *w2) |
    @"makeWideSingle"!(n, *w3) |
    @"makeWideSingle"!(n, *w4) |
    @"makeWideSingle"!(n, *w5) |
    @"makeWideSingle"!(n, *w6) |
    @"makeWideSingle"!(n, *w7) |
    @"makeWideSingle"!(n, *w8) |
    @"makeWideSingle"!(n, *w9) |
    @"makeWideSingle"!(n, *w10) |

    for(@p1 <- w1; @p2 <- w2; @p3 <- w3; @p4 <- w4; @p5 <- w5; @p6 <- w6; @p7 <- w7; @p8 <- w8; @p9 <- w9; @p10 <- w10) {
      ret!({p1 | p2 | p3 | p4 | p5 | p6 | p7 | p8 | p9 | p10})
    }
  }
} |
@"makeWide"!(300, "myWide")
