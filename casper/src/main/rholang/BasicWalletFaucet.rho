//scalapackage coop.rchain.rholang.mint

//requires MakeMint, BasicWallet

new BasicWalletFaucet, sgset(`rho:stopgap:set`), sgget(`rho:stopgap:get`), ack, bwret in {
  sgset!("BasicWalletFaucet", *BasicWalletFaucet, *ack) |
  sgget!("BasicWallet", bwret) |
  for (_ <- ack; BasicWallet <- bwret) {
    contract BasicWalletFaucet(@mint, return) = {
      new this in {
        contract this(@amount, @algorithm, @publicKey, return) = {
          new walletPurseCh, ret in {
            mint!("makePurse", amount, *walletPurseCh) |
            for(@walletPurse <- walletPurseCh) {
              BasicWallet!(walletPurse, algorithm, publicKey, *return)
            }
          }
        } |
        return!(bundle+{*this})
      }
    }
  }
}
