new
  RhoSpecCh, rl(`rho:registry:lookup`),
  registryOps(`rho:registry:ops`),
  test_buildUri,
  test_buildUriIllegalArgument
in {
  for(@(_, RhoSpec) <- rl!?(`rho:id:zphjgsfy13h1k85isc8rtwtgt3t9zzt5pjd5ihykfmyapfc4wt3x5h`)) {
    @RhoSpec!("testSuite",
      [
        ("buildUri should work", *test_buildUri),
        ("buildUri should return Nil for illegal arguments", *test_buildUriIllegalArgument),
    ])
  } |

  contract test_buildUri(ackCh, rhoSpec, _) = {
    new retCh in {
      registryOps!(*retCh, "buildUri", "foo".toByteArray()) |
      rhoSpec!(*ackCh, "assert", (`rho:id:5zsti8g1zpshouu8f7dm1dmqmte3wreeb1abf5dj51h1dds1cjizja`, "== <-", *retCh), "Expecting an uri")
    }
  } |

  contract test_buildUriIllegalArgument(ackCh, rhoSpec, _) = {
    new retCh, name in {
      registryOps!(*retCh, "buildUri", *name) |
      rhoSpec!(*ackCh, "assert", (Nil, "== <-", *retCh), "Expecting Nil")
    }
  }
}