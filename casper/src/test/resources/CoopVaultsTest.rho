
new
  rl(`rho:registry:lookup`),
  RhoSpecCh,
  RevVaultCh,
  revAddress(`rho:rev:address`),
  stdlog(`rho:io:stdlog`),
  setup,
  test_check_balances,
  getBalance
in {
  rl!(`rho:id:6wnujzcraztjfg941skrtbdkdgbko8nuaqihuhn15s66oz8ro5gwbb`, *RhoSpecCh) |
  rl!(`rho:id:1o93uitkrjfubh43jt19owanuezhntag5wh74c6ur5feuotpi73q8z`, *RevVaultCh) |
  for(@(_, RhoSpec) <- RhoSpecCh;
      @(_, RevVault) <- RevVaultCh) {
    @RhoSpec!("testSuite", *setup,
      [
        ("Check balances", *test_check_balances)
      ]) |

    contract setup(ret) = {
      ret!([])
    } |

    contract test_check_balances(rhoSpec, _, ackCh) = {
      new ch1, ch2, ch3, ch4 in {
        getBalance!("d407b6f7dce3b2c17b68a9299f51ad9f0de7e7212437deac393922231a712986", *ch1) |
        getBalance!("0f4286a44125158b3c3eadb075cf0d41feb10bffb7365e523f99426641772348", *ch2) |
        getBalance!("748e1fcb5b3763fd45158338f1974b6b9762e1a266e021dc45641d521161215c", *ch3) |
        getBalance!("349b1465e1ee14548cf29e2edff7bc41da9eae8c47b3b59d7bb7ce08010f0b7d", *ch4) |

        rhoSpec!("assertMany",
          [
            ((9223372036854775807, "== <-", *ch1), "balance should be visible"),
            ((9223372036854775807, "== <-", *ch2), "balance should be visible"),
            ((9223372036854775807, "== <-", *ch3), "balance should be visible"),
            ((9223372036854775807, "== <-", *ch4), "balance should be visible")
          ],
          *ackCh
        )
      }
    } |

    contract getBalance(@pk, retCh) = {
      new addrCh, vaultCh in {
        revAddress!("fromPublicKey", pk.hexToBytes(), *addrCh) |
        for (@addr <- addrCh) {
          @RevVault!("findOrCreate", addr, *vaultCh) |
          for (@(false, error) <- vaultCh) {
            stdlog!("error", {"error while finding the vault":error})
          } |
          for (@(true, vault) <- vaultCh) {
            @vault!("balance", *retCh)
          }
        }
      }
    }
  }
}
