//scalapackage coop.rchain.rholang

// All the assertions in this file are expected to fail as the FailingResultCollectorSpec 
// will make sure that in case of failing assertions a failure is properly reported

new assert(`rho:test:assertAck`),
    testCompleted(`rho:test:testSuiteCompleted`),
    ch1, ch2,
    ack1, ack2, ack3, ack4, ack5, ack6
in {
  assert!("false should fail", 1, false, "clue assertTrue", *ack1) |
  assert!("0 != 1 should fail", 1, (0, "==", 1), "clue assertEquals", *ack2) |
  assert!("incorrect assertion should fail", 1, ("some", "garbage", "assertion", "content"), "bad assertion should fail", *ack3) |

  ch1 ! (1) |
  ch2 ! (2) |
  for (x <- ch1; y <- ch2) {
    assert!("not equal vars are not equal", 1, (*x, "==", *y), "should not be equal", *ack4) |
    assert!("var not equal to constant", 1, (*x, "==", 0), "var should not equal const", *ack5) |
    assert!("cost not equal to var", 1, (0, "==", *x), "const should not equal var", *ack6)
  } |

  for (_ <- ack1; _<- ack2; _ <- ack3; _ <- ack4; _ <- ack5) {
    testCompleted!(true)
  }
}
