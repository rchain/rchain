new loop, primeCheck in {
  contract loop(@x) = {
    match x {
      [] => Nil
      [head ...tail] => {
        new ret in {
          for (_ <- ret) {
            loop!(tail)
          } | primeCheck!(head, *ret)
        }
      }
    }
  } |
  contract primeCheck(@x, ret) = {
    match x {
      Nil => @"stdoutAck"!("Nil", *ret)
      ~{~Nil | ~Nil} => @"stdoutAck"!("Prime", *ret)
      _ => @"stdoutAck"!("Composite", *ret)
    }
  } |
  loop!([Nil, 7, 7 | 8, 9 | Nil, 9 | 10, Nil, 9])
}
