new loop, primeCheck, stdoutAck(`rho:io:stdoutAck`) in {
  contract loop(@x) = {
    match x {
      [] => Nil
      [head ...tail] => {
        primeCheck!?(head); loop!(tail)
      }
    }
  } |
  contract primeCheck(ret, @x) = {
    match x {
      Nil => stdoutAck!(*ret, "Nil" )
      ~{~Nil | ~Nil} => stdoutAck!(*ret,"Prime")
      _ => stdoutAck!(*ret, "Composite")
    }
  } |
  loop!([Nil, 7, 7 | 8, 9 | Nil, 9 | 10, Nil, 9])
}
