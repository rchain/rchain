// This is a will-be-unit-test for the comparison operations in Rholang.
// Note that the currently outputted values are simply based on
// Rosette's output. We probably want to change a lot of behavior
// in the reimplementation.

match [
    // Equal

    2 == 2,                        // true
    2.0 == 2.0,                    // true
    "foo" == "foo",                // true
    2 == 3,                        // false
    2.0 == 3.0,                    // false
    "foo" == "bar",                // false

    // Not equal

    2 != 2,                        // false
    2.0 != 2.0,                    // false
    "foo" != "foo",                // false
    2 != 3,                        // true
    2.0 != 3.0,                    // true
    "foo" != "bar",                // true

    // Greater

    2 > 1,                         // true
    2 > 2,                         // false
    2 > 3,                         // false
    2.0 > 1.0,                     // true
    2.0 > 2.0,                     // false
    2.0 > 3.0,                     // false
    "foo" > "bar",                 // true, in alphabetic ordering
    "foo" > "foo",                 // false, in alphabetic ordering
    "foo" > "zoo",                 // false, in alphabetic ordering

    // Greater or equal

    2 >= 1,                        // true
    2 >= 2,                        // true
    2 >= 3,                        // false
    2.0 >= 1.0,                    // true
    2.0 >= 2.0,                    // true
    2.0 >= 3.0,                    // false
    "foo" >= "bar",                // true, in alphabetic ordering
    "foo" >= "foo",                // true, in alphabetic ordering
    "foo" >= "zoo",                // false, in alphabetic ordering

    // Less

    2 < 1,                         // false
    2 < 2,                         // false
    2 < 3,                         // true
    2.0 < 1.0,                     // false
    2.0 < 2.0,                     // false
    2.0 < 3.0,                     // true
    "foo" < "bar",                 // false, in alphabetic ordering
    "foo" < "foo",                 // false, in alphabetic ordering
    "foo" < "zoo",                 // true, in alphabetic ordering

    // Less or equal

    2 <= 1,                        // false
    2 <= 2,                        // true
    2 <= 3,                        // true
    2.0 <= 1.0,                    // false
    2.0 <= 2.0,                    // true
    2.0 <= 3.0,                    // true
    "foo" <= "bar",                // false, in alphabetic ordering
    "foo" <= "foo",                // true, in alphabetic ordering
    "foo" <= "zoo"                 // true, in alphabetic ordering

    ] with

< true, true, true, false, false, false,
  false, false, false, true, true, true,
  true, false, false, true, false, false, true, false, false,
  true, true, false, true, true, false, true, true, false,
  false, false, true, false, false,true, false, false, true,
  false, true, true, false, true, true, false, true, true > => {
    print("Pass")
}
_ => {
    print("Fail")
}
