package coop.rchain.rspace.channelStore

import coop.rchain.rspace.hashing.Blake2b256Hash

/**
  * The [[ChannelStore]] is trying to solve the problem that the dataHash, continuationHash and joinHash
  * which are the keys in HistoryTrie store can not be generated by the channelHash
  * in [[coop.rchain.rspace.trace.Event]], which
  * would make merging not possible when trying to get state from eventLog.
  *
  * This should a temp solution for merging because this method would cause performance problem.
  *
  * The better solution is to hard fork to change how dataHash, continuationHash and joinHash are generated.
  */
trait ChannelHash
final case class DataJoinHash(dataHash: Blake2b256Hash, joinHash: Blake2b256Hash)
    extends ChannelHash
final case class ContinuationHash(hash: Blake2b256Hash) extends ChannelHash

trait ChannelStore[F[_], C] {
  def putChannelHash(channel: C): F[Unit]
  def putChannelHashes(channels: Seq[C]): F[Unit]
  def putContinuationHash(channels: Seq[C]): F[Unit]
  def putContinuationHashes(conts: Seq[Seq[C]]): F[Unit]
  def getChannelHash(hash: Blake2b256Hash): F[Option[ChannelHash]]

  def continuationKey(channels: Seq[Blake2b256Hash]): Blake2b256Hash =
    Blake2b256Hash.create(channels.map(_.toByteString.toByteArray).foldLeft(Array[Byte]())(_ ++ _))
}
